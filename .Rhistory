fileURL <- "https://data.baltomorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD"
download.file(fileURL, destfile = "./data/cameras.csv", method = "curl")
install.packages("RMySQL")
library("RMySQL")
install.packages("RMySQL")
install.packages(“RMySQL”, type = “source”)
install.packages("RMySQL", type = "source")
library("RMySQL")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
install.packages("RMySQL", type = "source")
library("RMySQL")
ucscDb <- dbConnect(MySQL(), user="genome", host="genome-mysql.cse.ucsc.edu")
setwd("C:/Users/duy.bui/OneDrive/Documents/Exploratory Data Analysis/Assignment/Project-2")
NEI <- readRDS("./data/summarySCC_PM25.rds")
SCC <- readRDS("./data/Source_Classification_Code.rds")
#take a smaller set of data before merging (remove unncessary columns)
NEI <- subset(NEI, select = c("SCC", "fips", "Emissions", "year"))
SCC <- subset(SCC, select = c("SCC", "SCC.Level.One"))
state <- NEI[NEI$fips %in% c("24510", "06037"),]
#Merge data
merged <- merge(x = state, y = SCC, by.x = "SCC", by.y = "SCC", all.x = TRUE)
merged$SCC.Level.One <- as.character(merged$SCC.Level.One)
#Extract data from Mobile Sources
mobileSource <- merged[(merged$SCC.Level.One %in% c("Mobile Sources")),]
#Calculate total emissions per year and save it as a new data frame
totalE <- aggregate(mobileSource$Emissions, by = list(mobileSource$year, mobileSource$fips), sum)
#Change the column names
colnames(totalE) <- c("years", "state", "TotalEmissions")
qplot(factor(years),data=totalE,geom="bar",fill=state,weight=TotalEmissions,position="dodge",main = "Pollutant emission from Mobile Vehicle Source per year", xlab="Years",ylab="Total Emissions") +
scale_fill_discrete(name="Experimental Condition",
breaks=c("06037", "24510"),
labels=c("Cali", "Bal"))
library(ggplot2)
qplot(factor(years),data=totalE,geom="bar",fill=state,weight=TotalEmissions,position="dodge",main = "Pollutant emission from Mobile Vehicle Source per year", xlab="Years",ylab="Total Emissions") +
scale_fill_discrete(name="Experimental Condition",
breaks=c("06037", "24510"),
labels=c("Cali", "Bal"))
source("plot6.R")
source("plot6.R")
plot6()
source("plot6.R")
plot6()
View(NEI)
NEI <- readRDS("./data/summarySCC_PM25.rds")
View(NEI)
source("plot3.R")
plot3()
source("plot3.R")
debug(plot3)
plot3()
View(totalE)
source("plot3.R")
plot3()
source("plot3.R")
plot3()
source("plot3.R")
plot3()
source("plot3.R")
plot3()
source("plot3.R")
plot3()
setwd("C:/Users/duy.bui/OneDrive/Documents/Getting and Cleaning Data/Assignment")
x_test <- read.csv(file = "./data/test/X_test.txt", header = FALSE)
y_test <- read.csv(file = "./data/test/y_test.txt", header = FALSE)
subject_test <- read.csv(file = "./data/test/subject_test.txt", header = FALSE)
x_train <- read.csv(file = "./data/train/X_train.txt", header = FALSE)
y_train <- read.csv(file = "./data/train/y_train.txt", header = FALSE)
subject_train <- read.csv(file = "./data/test/subject_train.txt", header = FALSE)
View(x_train)
View(y_test)
x_test <- read.csv(file = "./data/test/X_test.txt", header = FALSE, sep=" ")
y_test <- read.csv(file = "./data/test/y_test.txt", header = FALSE)
subject_test <- read.csv(file = "./data/test/subject_test.txt", header = FALSE)
x_train <- read.csv(file = "./data/train/X_train.txt", header = FALSE, sep=" ")
y_train <- read.csv(file = "./data/train/y_train.txt", header = FALSE)
subject_train <- read.csv(file = "./data/train/subject_train.txt", header = FALSE)
View(x_test)
x_test <- read.csv(file = "./data/test/X_test.txt", header = FALSE, sep="")
View(x_test)
x_train <- read.csv(file = "./data/train/X_train.txt", header = FALSE, sep="")
View(subject_test)
subject <- rbind(subject_test, subject_train)
x <- rbind(x_test, x_train)
y <- rbind(y_test, y_train)
subject <- rbind(subject_test, subject_train)
dat <- cbind(x, y, subject)
View(dat)
tail(names(dat), n=3)
colnames(y)[1] <- "y"
View(y)
colnames(subject)[1] <- "subject"
dat <- cbind(x, y, subject)
tail(names(dat), n=3)
feature <- read.csv(file = "./data/features.txt", header = FALSE, sep="")
View(feature)
load(plyr)
library(plyr)
meanCol <- grep("mean", feature$V2, value = FALSE, fixed = FALSE)
test <- subset(dat, select = meanCol)
meanColIndex <- grep("mean()", feature$V2, value = FALSE, fixed = FALSE)
stdColIndex <- grep("std()", feature$V2, value = FALSE, fixed = FALSE)
meanDat <- subset(dat, select = meanColIndex)
stdDat <- subset(dat, select = stdColIndex)
meanColIndex <- grep("mean()", feature$V2, value = FALSE, fixed = TRUE)
meanColIndex <- grep("mean()", feature$V2, value = FALSE, fixed = TRUE)
stdColIndex <- grep("std()", feature$V2, value = FALSE, fixed = TRUE)
meanDat <- subset(dat, select = meanColIndex)
stdDat <- subset(dat, select = stdColIndex)
View(subject)
View(y)
activity_label <- read.csv(file = "./data/activity_labels.txt", header = FALSE, sep="")
colnames(activity_label) <- c("y", "Activity Labels")
mergedat <- merge(dat, activity_label, by.x = "y", by.y = "y", all.x = TRUE)
meanCol <- grep("mean()", feature$V2, value = TRUE, fixed = TRUE)
colnames(meanDat) <- meanCol
View(meanDat)
stdColName <- grep("std()", feature$V2, value = TRUE, fixed = TRUE)
colnames(stdDat)  <- stdColName
View(stdDat)
c(meanColIndex, 562, 563, 564)
x_test <- read.csv(file = "./data/test/X_test.txt", header = FALSE, sep="")
y_test <- read.csv(file = "./data/test/y_test.txt", header = FALSE)
subject_test <- read.csv(file = "./data/test/subject_test.txt", header = FALSE)
x_train <- read.csv(file = "./data/train/X_train.txt", header = FALSE, sep="")
y_train <- read.csv(file = "./data/train/y_train.txt", header = FALSE)
subject_train <- read.csv(file = "./data/train/subject_train.txt", header = FALSE)
x <- rbind(x_test, x_train)
y <- rbind(y_test, y_train)
subject <- rbind(subject_test, subject_train)
colnames(y)[1] <- "y"
colnames(subject)[1] <- "subject"
dat <- cbind(x, y, subject)
feature <- read.csv(file = "./data/features.txt", header = FALSE, sep="")
activity_label <- read.csv(file = "./data/activity_labels.txt", header = FALSE, sep="")
colnames(activity_label) <- c("y", "activity")
meanColIndex <- grep("mean()", feature$V2, value = FALSE, fixed = TRUE)
stdColIndex <- grep("std()", feature$V2, value = FALSE, fixed = TRUE)
meanColName <- grep("mean()", feature$V2, value = TRUE, fixed = TRUE)
stdColName <- grep("std()", feature$V2, value = TRUE, fixed = TRUE)
mergedat <- merge(dat, activity_label, by.x = "y", by.y = "y", all.x = TRUE)
meanDat <- subset(mergedat, select = meanColIndex)
stdDat <- subset(mergedat, select = c(stdColIndex, 562, 564))
colnames(meanDat) <- meanColName
colnames(stdDat)  <- c(stdColName, "subject", "activity")
dat <- cbind(meanDat, stdDat)
View(dat)
View(stdDat)
View(meanDat)
meanDat <- subset(mergedat, select = meanColIndex)
View(meanDat)
View(mergedat)
colnames(activity_label) <- c("y", "activity")
meanColIndex <- grep("mean()", feature$V2, value = FALSE, fixed = TRUE)
stdColIndex <- grep("std()", feature$V2, value = FALSE, fixed = TRUE)
meanColName <- grep("mean()", feature$V2, value = TRUE, fixed = TRUE)
stdColName <- grep("std()", feature$V2, value = TRUE, fixed = TRUE)
meanDat <- subset(dat, select = meanColIndex)
stdDat <- subset(dat, select = c(stdColIndex, 562, 564))
colnames(meanDat) <- meanColName
colnames(stdDat)  <- c(stdColName, "subject", "y")
dat <- cbind(meanDat, stdDat)
mergedat <- merge(dat, activity_label, by.x = "y", by.y = "y", all.x = TRUE)
x_test <- read.csv(file = "./data/test/X_test.txt", header = FALSE, sep="")
y_test <- read.csv(file = "./data/test/y_test.txt", header = FALSE)
subject_test <- read.csv(file = "./data/test/subject_test.txt", header = FALSE)
x_train <- read.csv(file = "./data/train/X_train.txt", header = FALSE, sep="")
y_train <- read.csv(file = "./data/train/y_train.txt", header = FALSE)
subject_train <- read.csv(file = "./data/train/subject_train.txt", header = FALSE)
x <- rbind(x_test, x_train)
y <- rbind(y_test, y_train)
subject <- rbind(subject_test, subject_train)
colnames(y)[1] <- "y"
colnames(subject)[1] <- "subject"
dat <- cbind(x, y, subject)
feature <- read.csv(file = "./data/features.txt", header = FALSE, sep="")
meanColIndex <- grep("mean()", feature$V2, value = FALSE, fixed = TRUE)
stdColIndex <- grep("std()", feature$V2, value = FALSE, fixed = TRUE)
meanColName <- grep("mean()", feature$V2, value = TRUE, fixed = TRUE)
stdColName <- grep("std()", feature$V2, value = TRUE, fixed = TRUE)
meanDat <- subset(dat, select = meanColIndex)
stdDat <- subset(dat, select = c(stdColIndex, 562, 564))
colnames(meanDat) <- meanColName
colnames(stdDat)  <- c(stdColName, "subject", "y")
dat <- cbind(meanDat, stdDat)
activity_label <- read.csv(file = "./data/activity_labels.txt", header = FALSE, sep="")
colnames(activity_label) <- c("y", "activity")
mergedat <- merge(dat, activity_label, by.x = "y", by.y = "y", all.x = TRUE)
dat <- cbind(x, y, subject)
feature <- read.csv(file = "./data/features.txt", header = FALSE, sep="")
meanColIndex <- grep("mean()", feature$V2, value = FALSE, fixed = TRUE)
stdColIndex <- grep("std()", feature$V2, value = FALSE, fixed = TRUE)
meanColName <- grep("mean()", feature$V2, value = TRUE, fixed = TRUE)
stdColName <- grep("std()", feature$V2, value = TRUE, fixed = TRUE)
meanDat <- subset(dat, select = meanColIndex)
stdDat <- subset(dat, select = c(stdColIndex, 562, 563))
colnames(meanDat) <- meanColName
colnames(stdDat)  <- c(stdColName, "subject", "y")
dat <- cbind(meanDat, stdDat)
activity_label <- read.csv(file = "./data/activity_labels.txt", header = FALSE, sep="")
colnames(activity_label) <- c("y", "activity")
mergedat <- merge(dat, activity_label, by.x = "y", by.y = "y", all.x = TRUE)
tail(mergedat$activity, n=10)
is.na(mergedat$activity)
test <- is.na(mergeDat$y)
test <- is.na(mergedat$y)
test
View(mergedat)
colnames(y)[1] <- "y"
colnames(subject)[1] <- "subject"
dat <- cbind(x, y, subject)
feature <- read.csv(file = "./data/features.txt", header = FALSE, sep="")
meanColIndex <- grep("mean()", feature$V2, value = FALSE, fixed = TRUE)
stdColIndex <- grep("std()", feature$V2, value = FALSE, fixed = TRUE)
meanColName <- grep("mean()", feature$V2, value = TRUE, fixed = TRUE)
stdColName <- grep("std()", feature$V2, value = TRUE, fixed = TRUE)
meanDat <- subset(dat, select = meanColIndex)
stdDat <- subset(dat, select = c(stdColIndex, 562, 563))
colnames(meanDat) <- meanColName
colnames(stdDat)  <- c(stdColName, "y", "subject")
dat <- cbind(meanDat, stdDat)
activity_label <- read.csv(file = "./data/activity_labels.txt", header = FALSE, sep="")
colnames(activity_label) <- c("y", "activity")
mergedat <- merge(dat, activity_label, by.x = "y", by.y = "y", all.x = TRUE)
tail(mergedat$activity, n=10)
index <- 1:66
index <- 2:67
a <- aggregate(dat[,index], by = list(dat$subject, dat$activity), mean)
a <- aggregate(mergedat[,index], by = list(mergedat$subject, mergedat$activity), mean)
View(a)
index <- cbind(meanColName, stdColName)
View(index)
index <- rbind(meanColName, stdColName)
View(index)
index <- append(meanColName, stdColName)
a <- aggregate(dat[,index], by = list(dat$subject, dat$activity), mean)
write.table(a, file="final.txt", row.name=FALSE)
write.table(a, file="final.txt", row.name=FALSE,sep = "", eol = "\n", col.names = TRUE)
write.table(a, file="final.txt",sep = "", eol = "\r\n", row.name=FALSE, col.name=TRUE)
write.table(a, file="final.txt",sep = "", row.name=FALSE, col.name=TRUE)
source("run_analysis.R")
analysis()
install.packages("swirl")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
library(dpylr)
library(dplyr)
cran <- tbl_df(data = mydf)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by()
?group_by
by_package <- group_by(cran, package)
by_package
summerize(by_package, n = mean(size))
summerise(by_package, n = mean(size))
summarise(by_package, n=mean(size))
summarize(by_package, n=mean(size))
summarize(by_package, mean(size))
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
tbl
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count>679)
top_counts
head(top_counts, 20)
arrange(pack_sum, desc(count))
arrange(top_counts, desc(count))
quantile(pack_sum$unique, probs=0.99)
top_unique <- filter(pack_sum, unique > 465)
top_unique
arrange(top_unique, desc(unique))
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
